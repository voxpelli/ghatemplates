# Inspired by https://github.com/SocketDev/workflows/blob/fe40aa6135a5ea6d81ad8103e4f044d2f9227e41/.github/workflows/reusable-sync.yml

name: Reusable Sync

on:
  workflow_call:
    secrets:
      APP_PEM:
        description: 'The private key of the GitHub App to use for the PR creation.'
        required: false

    inputs:
      app-id:
        description: 'ID of the GitHub App that should be used to create the PR'
        required: false
        type: string

      npm-sync-script:
          description: 'The name of the script to run as the sync.'
          required: true
          type: string

      diff-files:
        description: 'A space separated list of file paths to append to "git diff" command to check if changed'
        type: string

      branch-name:
        description: 'The name of the branch to create'
        required: true
        type: string

      pr-title:
        description: 'The title of the PR.'
        required: true
        type: string
      pr-body:
        description: 'The body of the PR.'
        required: true
        type: string

      commit-message:
        description: 'The title of the PR.'
        required: true
        type: string

      lockfile:
        description: 'Whether to expect a lockfile or not'
        required: false
        default: false
        type: boolean

# Push and PR permissions can also be handled using a bot app, see the "actions/create-github-app-token" step
permissions:
  contents: write
  pull-requests: write

jobs:
  diff:
    name: Sync ${{ inputs.npm-sync-script }}
    environment: pr-bot
    runs-on: ubuntu-24.04
    steps:
      # Set up repository
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          show-progress: false
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # Caching and installing
      - name: Determine npm cache directory windows
        id: npm-cache-dir-windows
        if: runner.os == 'Windows'
        run: echo "dir=$(npm config get cache)" >> $env:GITHUB_OUTPUT
      - name: Determine npm cache directory non-windows
        id: npm-cache-dir
        if: runner.os != 'Windows'
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir-windows.outputs.dir || steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - if: inputs.lockfile == false
        run: npm install --ignore-scripts --no-fund --no-audit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: inputs.lockfile == true
        run: npm ci --ignore-scripts --no-fund --no-audit
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm rebuild && npm run prepare --if-present

      # Actual syncing
      - name: Run npm sync script
        run: npm run ${{ inputs.npm-sync-script }}

      - name: Diff
        id: diff
        if: inputs.diff-files
        run: |
          if [[ "$(git diff --stat ${{ inputs.diff-files }})" != "" ]]; then
              echo "hasDiff=true" >> "$GITHUB_OUTPUT"
          fi

      # Generate bot token if APP_ID is set
      - uses: actions/create-github-app-token@v2
        if: inputs.app-id && (steps.diff.outputs.hasDiff || !inputs.diff-files)
        id: app-token
        with:
          app-id: ${{ inputs.app-id }}
          private-key: ${{ secrets.APP_PEM }}

      - name: Retrieve GitHub App User ID
        if: steps.app-token.outputs.token
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      # Commit, push and open a PR if that's the need

      # Inspired by https://github.com/actions/toolkit/blob/0db3029fcfcb1393a2b3ccd14caecd7a3460af4e/.github/workflows/update-github.yaml#L22-L23
      # And by https://github.com/actions/deploy-pages/blob/ff669327f73994ba35f45d1cd2fc81d82d1c852c/.github/workflows/rebuild-dependabot-prs.yml#L43-L44
      - name: Commit and push any changes
        if: steps.diff.outputs.hasDiff || !inputs.diff-files
        id: push-changes
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            git config --global user.name '${{steps.app-token.outputs.app-slug || 'github-actions'}}[bot]'
            git config --global user.email '${{steps.get-user-id.outputs.user-id || '41898282'}}+${{ steps.app-token.outputs.app-slug ||'github-actions' }}[bot]@users.noreply.github.com>'
            git checkout -b ${{ inputs.branch-name }}
            git add .
            if (! git show-ref origin/${{ inputs.branch-name }} -q) || [[ "$(git diff origin/${{ inputs.branch-name }} --stat)" != "" ]]; then
              echo "createPR=true" >> $GITHUB_OUTPUT
              git commit -m "${{ inputs.commit-message }}"
              gh auth setup-git
              git push origin ${{ inputs.branch-name }} -fu --no-verify
            fi
          fi
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}

      - name: Open a PR for the sync
        if: steps.push-changes.outputs.createPR
        continue-on-error: true
        run: gh pr create --head ${{ inputs.branch-name }} --title "${{ inputs.pr-title }}" --body "${{ inputs.pr-body }}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN  }}
